//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file contains protocol buffers that are shared throughout HBase

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: ClusterId.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Content of the '/hbase/hbaseid', cluster id, znode.
// Also cluster of the ${HBASE_ROOTDIR}/hbase.id file.
type ClusterId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This is the cluster id, a uuid as a String
	ClusterId     *string `protobuf:"bytes,1,req,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterId) Reset() {
	*x = ClusterId{}
	mi := &file_ClusterId_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterId) ProtoMessage() {}

func (x *ClusterId) ProtoReflect() protoreflect.Message {
	mi := &file_ClusterId_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterId.ProtoReflect.Descriptor instead.
func (*ClusterId) Descriptor() ([]byte, []int) {
	return file_ClusterId_proto_rawDescGZIP(), []int{0}
}

func (x *ClusterId) GetClusterId() string {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return ""
}

var File_ClusterId_proto protoreflect.FileDescriptor

const file_ClusterId_proto_rawDesc = "" +
	"\n" +
	"\x0fClusterId.proto\x12\x02pb\"*\n" +
	"\tClusterId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x02(\tR\tclusterIdBI\n" +
	"*org.apache.hadoop.hbase.protobuf.generatedB\x0fClusterIdProtosH\x01Z\x05../pb\xa0\x01\x01"

var (
	file_ClusterId_proto_rawDescOnce sync.Once
	file_ClusterId_proto_rawDescData []byte
)

func file_ClusterId_proto_rawDescGZIP() []byte {
	file_ClusterId_proto_rawDescOnce.Do(func() {
		file_ClusterId_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ClusterId_proto_rawDesc), len(file_ClusterId_proto_rawDesc)))
	})
	return file_ClusterId_proto_rawDescData
}

var file_ClusterId_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ClusterId_proto_goTypes = []any{
	(*ClusterId)(nil), // 0: pb.ClusterId
}
var file_ClusterId_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ClusterId_proto_init() }
func file_ClusterId_proto_init() {
	if File_ClusterId_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ClusterId_proto_rawDesc), len(file_ClusterId_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ClusterId_proto_goTypes,
		DependencyIndexes: file_ClusterId_proto_depIdxs,
		MessageInfos:      file_ClusterId_proto_msgTypes,
	}.Build()
	File_ClusterId_proto = out.File
	file_ClusterId_proto_goTypes = nil
	file_ClusterId_proto_depIdxs = nil
}
