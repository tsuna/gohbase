//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file contains protocol buffers that are used for error handling

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: ErrorHandling.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Protobuf version of a java.lang.StackTraceElement
// so we can serialize exceptions.
type StackTraceElementMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeclaringClass *string                `protobuf:"bytes,1,opt,name=declaring_class,json=declaringClass" json:"declaring_class,omitempty"`
	MethodName     *string                `protobuf:"bytes,2,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
	FileName       *string                `protobuf:"bytes,3,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	LineNumber     *int32                 `protobuf:"varint,4,opt,name=line_number,json=lineNumber" json:"line_number,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StackTraceElementMessage) Reset() {
	*x = StackTraceElementMessage{}
	mi := &file_ErrorHandling_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StackTraceElementMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackTraceElementMessage) ProtoMessage() {}

func (x *StackTraceElementMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ErrorHandling_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackTraceElementMessage.ProtoReflect.Descriptor instead.
func (*StackTraceElementMessage) Descriptor() ([]byte, []int) {
	return file_ErrorHandling_proto_rawDescGZIP(), []int{0}
}

func (x *StackTraceElementMessage) GetDeclaringClass() string {
	if x != nil && x.DeclaringClass != nil {
		return *x.DeclaringClass
	}
	return ""
}

func (x *StackTraceElementMessage) GetMethodName() string {
	if x != nil && x.MethodName != nil {
		return *x.MethodName
	}
	return ""
}

func (x *StackTraceElementMessage) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *StackTraceElementMessage) GetLineNumber() int32 {
	if x != nil && x.LineNumber != nil {
		return *x.LineNumber
	}
	return 0
}

// *
// Cause of a remote failure for a generic exception. Contains
// all the information for a generic exception as well as
// optional info about the error for generic info passing
// (which should be another protobuffed class).
type GenericExceptionMessage struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ClassName     *string                     `protobuf:"bytes,1,opt,name=class_name,json=className" json:"class_name,omitempty"`
	Message       *string                     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	ErrorInfo     []byte                      `protobuf:"bytes,3,opt,name=error_info,json=errorInfo" json:"error_info,omitempty"`
	Trace         []*StackTraceElementMessage `protobuf:"bytes,4,rep,name=trace" json:"trace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenericExceptionMessage) Reset() {
	*x = GenericExceptionMessage{}
	mi := &file_ErrorHandling_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericExceptionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericExceptionMessage) ProtoMessage() {}

func (x *GenericExceptionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ErrorHandling_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericExceptionMessage.ProtoReflect.Descriptor instead.
func (*GenericExceptionMessage) Descriptor() ([]byte, []int) {
	return file_ErrorHandling_proto_rawDescGZIP(), []int{1}
}

func (x *GenericExceptionMessage) GetClassName() string {
	if x != nil && x.ClassName != nil {
		return *x.ClassName
	}
	return ""
}

func (x *GenericExceptionMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GenericExceptionMessage) GetErrorInfo() []byte {
	if x != nil {
		return x.ErrorInfo
	}
	return nil
}

func (x *GenericExceptionMessage) GetTrace() []*StackTraceElementMessage {
	if x != nil {
		return x.Trace
	}
	return nil
}

// *
// Exception sent across the wire when a remote task needs
// to notify other tasks that it failed and why
type ForeignExceptionMessage struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	Source           *string                  `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	GenericException *GenericExceptionMessage `protobuf:"bytes,2,opt,name=generic_exception,json=genericException" json:"generic_exception,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ForeignExceptionMessage) Reset() {
	*x = ForeignExceptionMessage{}
	mi := &file_ErrorHandling_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForeignExceptionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignExceptionMessage) ProtoMessage() {}

func (x *ForeignExceptionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ErrorHandling_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignExceptionMessage.ProtoReflect.Descriptor instead.
func (*ForeignExceptionMessage) Descriptor() ([]byte, []int) {
	return file_ErrorHandling_proto_rawDescGZIP(), []int{2}
}

func (x *ForeignExceptionMessage) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *ForeignExceptionMessage) GetGenericException() *GenericExceptionMessage {
	if x != nil {
		return x.GenericException
	}
	return nil
}

var File_ErrorHandling_proto protoreflect.FileDescriptor

const file_ErrorHandling_proto_rawDesc = "" +
	"\n" +
	"\x13ErrorHandling.proto\x12\x02pb\"\xa2\x01\n" +
	"\x18StackTraceElementMessage\x12'\n" +
	"\x0fdeclaring_class\x18\x01 \x01(\tR\x0edeclaringClass\x12\x1f\n" +
	"\vmethod_name\x18\x02 \x01(\tR\n" +
	"methodName\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12\x1f\n" +
	"\vline_number\x18\x04 \x01(\x05R\n" +
	"lineNumber\"\xa5\x01\n" +
	"\x17GenericExceptionMessage\x12\x1d\n" +
	"\n" +
	"class_name\x18\x01 \x01(\tR\tclassName\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"error_info\x18\x03 \x01(\fR\terrorInfo\x122\n" +
	"\x05trace\x18\x04 \x03(\v2\x1c.pb.StackTraceElementMessageR\x05trace\"{\n" +
	"\x17ForeignExceptionMessage\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12H\n" +
	"\x11generic_exception\x18\x02 \x01(\v2\x1b.pb.GenericExceptionMessageR\x10genericExceptionBM\n" +
	"*org.apache.hadoop.hbase.protobuf.generatedB\x13ErrorHandlingProtosH\x01Z\x05../pb\xa0\x01\x01"

var (
	file_ErrorHandling_proto_rawDescOnce sync.Once
	file_ErrorHandling_proto_rawDescData []byte
)

func file_ErrorHandling_proto_rawDescGZIP() []byte {
	file_ErrorHandling_proto_rawDescOnce.Do(func() {
		file_ErrorHandling_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ErrorHandling_proto_rawDesc), len(file_ErrorHandling_proto_rawDesc)))
	})
	return file_ErrorHandling_proto_rawDescData
}

var file_ErrorHandling_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ErrorHandling_proto_goTypes = []any{
	(*StackTraceElementMessage)(nil), // 0: pb.StackTraceElementMessage
	(*GenericExceptionMessage)(nil),  // 1: pb.GenericExceptionMessage
	(*ForeignExceptionMessage)(nil),  // 2: pb.ForeignExceptionMessage
}
var file_ErrorHandling_proto_depIdxs = []int32{
	0, // 0: pb.GenericExceptionMessage.trace:type_name -> pb.StackTraceElementMessage
	1, // 1: pb.ForeignExceptionMessage.generic_exception:type_name -> pb.GenericExceptionMessage
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ErrorHandling_proto_init() }
func file_ErrorHandling_proto_init() {
	if File_ErrorHandling_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ErrorHandling_proto_rawDesc), len(file_ErrorHandling_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ErrorHandling_proto_goTypes,
		DependencyIndexes: file_ErrorHandling_proto_depIdxs,
		MessageInfos:      file_ErrorHandling_proto_msgTypes,
	}.Build()
	File_ErrorHandling_proto = out.File
	file_ErrorHandling_proto_goTypes = nil
	file_ErrorHandling_proto_depIdxs = nil
}
