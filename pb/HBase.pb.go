//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file contains protocol buffers that are shared throughout HBase

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: HBase.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Comparison operators
type CompareType int32

const (
	CompareType_LESS             CompareType = 0
	CompareType_LESS_OR_EQUAL    CompareType = 1
	CompareType_EQUAL            CompareType = 2
	CompareType_NOT_EQUAL        CompareType = 3
	CompareType_GREATER_OR_EQUAL CompareType = 4
	CompareType_GREATER          CompareType = 5
	CompareType_NO_OP            CompareType = 6
)

// Enum value maps for CompareType.
var (
	CompareType_name = map[int32]string{
		0: "LESS",
		1: "LESS_OR_EQUAL",
		2: "EQUAL",
		3: "NOT_EQUAL",
		4: "GREATER_OR_EQUAL",
		5: "GREATER",
		6: "NO_OP",
	}
	CompareType_value = map[string]int32{
		"LESS":             0,
		"LESS_OR_EQUAL":    1,
		"EQUAL":            2,
		"NOT_EQUAL":        3,
		"GREATER_OR_EQUAL": 4,
		"GREATER":          5,
		"NO_OP":            6,
	}
)

func (x CompareType) Enum() *CompareType {
	p := new(CompareType)
	*p = x
	return p
}

func (x CompareType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompareType) Descriptor() protoreflect.EnumDescriptor {
	return file_HBase_proto_enumTypes[0].Descriptor()
}

func (CompareType) Type() protoreflect.EnumType {
	return &file_HBase_proto_enumTypes[0]
}

func (x CompareType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CompareType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CompareType(num)
	return nil
}

// Deprecated: Use CompareType.Descriptor instead.
func (CompareType) EnumDescriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{0}
}

type TimeUnit int32

const (
	TimeUnit_NANOSECONDS  TimeUnit = 1
	TimeUnit_MICROSECONDS TimeUnit = 2
	TimeUnit_MILLISECONDS TimeUnit = 3
	TimeUnit_SECONDS      TimeUnit = 4
	TimeUnit_MINUTES      TimeUnit = 5
	TimeUnit_HOURS        TimeUnit = 6
	TimeUnit_DAYS         TimeUnit = 7
)

// Enum value maps for TimeUnit.
var (
	TimeUnit_name = map[int32]string{
		1: "NANOSECONDS",
		2: "MICROSECONDS",
		3: "MILLISECONDS",
		4: "SECONDS",
		5: "MINUTES",
		6: "HOURS",
		7: "DAYS",
	}
	TimeUnit_value = map[string]int32{
		"NANOSECONDS":  1,
		"MICROSECONDS": 2,
		"MILLISECONDS": 3,
		"SECONDS":      4,
		"MINUTES":      5,
		"HOURS":        6,
		"DAYS":         7,
	}
)

func (x TimeUnit) Enum() *TimeUnit {
	p := new(TimeUnit)
	*p = x
	return p
}

func (x TimeUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_HBase_proto_enumTypes[1].Descriptor()
}

func (TimeUnit) Type() protoreflect.EnumType {
	return &file_HBase_proto_enumTypes[1]
}

func (x TimeUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TimeUnit) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TimeUnit(num)
	return nil
}

// Deprecated: Use TimeUnit.Descriptor instead.
func (TimeUnit) EnumDescriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{1}
}

type RegionSpecifier_RegionSpecifierType int32

const (
	// <tablename>,<startkey>,<regionId>.<encodedName>
	RegionSpecifier_REGION_NAME RegionSpecifier_RegionSpecifierType = 1
	// hash of <tablename>,<startkey>,<regionId>
	RegionSpecifier_ENCODED_REGION_NAME RegionSpecifier_RegionSpecifierType = 2
)

// Enum value maps for RegionSpecifier_RegionSpecifierType.
var (
	RegionSpecifier_RegionSpecifierType_name = map[int32]string{
		1: "REGION_NAME",
		2: "ENCODED_REGION_NAME",
	}
	RegionSpecifier_RegionSpecifierType_value = map[string]int32{
		"REGION_NAME":         1,
		"ENCODED_REGION_NAME": 2,
	}
)

func (x RegionSpecifier_RegionSpecifierType) Enum() *RegionSpecifier_RegionSpecifierType {
	p := new(RegionSpecifier_RegionSpecifierType)
	*p = x
	return p
}

func (x RegionSpecifier_RegionSpecifierType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegionSpecifier_RegionSpecifierType) Descriptor() protoreflect.EnumDescriptor {
	return file_HBase_proto_enumTypes[2].Descriptor()
}

func (RegionSpecifier_RegionSpecifierType) Type() protoreflect.EnumType {
	return &file_HBase_proto_enumTypes[2]
}

func (x RegionSpecifier_RegionSpecifierType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RegionSpecifier_RegionSpecifierType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RegionSpecifier_RegionSpecifierType(num)
	return nil
}

// Deprecated: Use RegionSpecifier_RegionSpecifierType.Descriptor instead.
func (RegionSpecifier_RegionSpecifierType) EnumDescriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{5, 0}
}

type SnapshotDescription_Type int32

const (
	SnapshotDescription_DISABLED  SnapshotDescription_Type = 0
	SnapshotDescription_FLUSH     SnapshotDescription_Type = 1
	SnapshotDescription_SKIPFLUSH SnapshotDescription_Type = 2
)

// Enum value maps for SnapshotDescription_Type.
var (
	SnapshotDescription_Type_name = map[int32]string{
		0: "DISABLED",
		1: "FLUSH",
		2: "SKIPFLUSH",
	}
	SnapshotDescription_Type_value = map[string]int32{
		"DISABLED":  0,
		"FLUSH":     1,
		"SKIPFLUSH": 2,
	}
)

func (x SnapshotDescription_Type) Enum() *SnapshotDescription_Type {
	p := new(SnapshotDescription_Type)
	*p = x
	return p
}

func (x SnapshotDescription_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SnapshotDescription_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_HBase_proto_enumTypes[3].Descriptor()
}

func (SnapshotDescription_Type) Type() protoreflect.EnumType {
	return &file_HBase_proto_enumTypes[3]
}

func (x SnapshotDescription_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SnapshotDescription_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SnapshotDescription_Type(num)
	return nil
}

// Deprecated: Use SnapshotDescription_Type.Descriptor instead.
func (SnapshotDescription_Type) EnumDescriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{14, 0}
}

// *
// Table Name
type TableName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     []byte                 `protobuf:"bytes,1,req,name=namespace" json:"namespace,omitempty"`
	Qualifier     []byte                 `protobuf:"bytes,2,req,name=qualifier" json:"qualifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableName) Reset() {
	*x = TableName{}
	mi := &file_HBase_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableName) ProtoMessage() {}

func (x *TableName) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableName.ProtoReflect.Descriptor instead.
func (*TableName) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{0}
}

func (x *TableName) GetNamespace() []byte {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *TableName) GetQualifier() []byte {
	if x != nil {
		return x.Qualifier
	}
	return nil
}

// *
// Table Schema
// Inspired by the rest TableSchema
type TableSchema struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TableName      *TableName             `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	Attributes     []*BytesBytesPair      `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	ColumnFamilies []*ColumnFamilySchema  `protobuf:"bytes,3,rep,name=column_families,json=columnFamilies" json:"column_families,omitempty"`
	Configuration  []*NameStringPair      `protobuf:"bytes,4,rep,name=configuration" json:"configuration,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TableSchema) Reset() {
	*x = TableSchema{}
	mi := &file_HBase_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSchema) ProtoMessage() {}

func (x *TableSchema) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSchema.ProtoReflect.Descriptor instead.
func (*TableSchema) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{1}
}

func (x *TableSchema) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *TableSchema) GetAttributes() []*BytesBytesPair {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TableSchema) GetColumnFamilies() []*ColumnFamilySchema {
	if x != nil {
		return x.ColumnFamilies
	}
	return nil
}

func (x *TableSchema) GetConfiguration() []*NameStringPair {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// *
// Column Family Schema
// Inspired by the rest ColumSchemaMessage
type ColumnFamilySchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          []byte                 `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Attributes    []*BytesBytesPair      `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	Configuration []*NameStringPair      `protobuf:"bytes,3,rep,name=configuration" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnFamilySchema) Reset() {
	*x = ColumnFamilySchema{}
	mi := &file_HBase_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnFamilySchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnFamilySchema) ProtoMessage() {}

func (x *ColumnFamilySchema) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnFamilySchema.ProtoReflect.Descriptor instead.
func (*ColumnFamilySchema) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{2}
}

func (x *ColumnFamilySchema) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ColumnFamilySchema) GetAttributes() []*BytesBytesPair {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ColumnFamilySchema) GetConfiguration() []*NameStringPair {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// *
// Protocol buffer version of HRegionInfo.
type RegionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RegionId      *uint64                `protobuf:"varint,1,req,name=region_id,json=regionId" json:"region_id,omitempty"`
	TableName     *TableName             `protobuf:"bytes,2,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	StartKey      []byte                 `protobuf:"bytes,3,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
	EndKey        []byte                 `protobuf:"bytes,4,opt,name=end_key,json=endKey" json:"end_key,omitempty"`
	Offline       *bool                  `protobuf:"varint,5,opt,name=offline" json:"offline,omitempty"`
	Split         *bool                  `protobuf:"varint,6,opt,name=split" json:"split,omitempty"`
	ReplicaId     *int32                 `protobuf:"varint,7,opt,name=replica_id,json=replicaId,def=0" json:"replica_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for RegionInfo fields.
const (
	Default_RegionInfo_ReplicaId = int32(0)
)

func (x *RegionInfo) Reset() {
	*x = RegionInfo{}
	mi := &file_HBase_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionInfo) ProtoMessage() {}

func (x *RegionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionInfo.ProtoReflect.Descriptor instead.
func (*RegionInfo) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{3}
}

func (x *RegionInfo) GetRegionId() uint64 {
	if x != nil && x.RegionId != nil {
		return *x.RegionId
	}
	return 0
}

func (x *RegionInfo) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *RegionInfo) GetStartKey() []byte {
	if x != nil {
		return x.StartKey
	}
	return nil
}

func (x *RegionInfo) GetEndKey() []byte {
	if x != nil {
		return x.EndKey
	}
	return nil
}

func (x *RegionInfo) GetOffline() bool {
	if x != nil && x.Offline != nil {
		return *x.Offline
	}
	return false
}

func (x *RegionInfo) GetSplit() bool {
	if x != nil && x.Split != nil {
		return *x.Split
	}
	return false
}

func (x *RegionInfo) GetReplicaId() int32 {
	if x != nil && x.ReplicaId != nil {
		return *x.ReplicaId
	}
	return Default_RegionInfo_ReplicaId
}

// *
// Protocol buffer for favored nodes
type FavoredNodes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FavoredNode   []*ServerName          `protobuf:"bytes,1,rep,name=favored_node,json=favoredNode" json:"favored_node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FavoredNodes) Reset() {
	*x = FavoredNodes{}
	mi := &file_HBase_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FavoredNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoredNodes) ProtoMessage() {}

func (x *FavoredNodes) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoredNodes.ProtoReflect.Descriptor instead.
func (*FavoredNodes) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{4}
}

func (x *FavoredNodes) GetFavoredNode() []*ServerName {
	if x != nil {
		return x.FavoredNode
	}
	return nil
}

// *
// Container protocol buffer to specify a region.
// You can specify region by region name, or the hash
// of the region name, which is known as encoded
// region name.
type RegionSpecifier struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Type          *RegionSpecifier_RegionSpecifierType `protobuf:"varint,1,req,name=type,enum=pb.RegionSpecifier_RegionSpecifierType" json:"type,omitempty"`
	Value         []byte                               `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegionSpecifier) Reset() {
	*x = RegionSpecifier{}
	mi := &file_HBase_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionSpecifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionSpecifier) ProtoMessage() {}

func (x *RegionSpecifier) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionSpecifier.ProtoReflect.Descriptor instead.
func (*RegionSpecifier) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{5}
}

func (x *RegionSpecifier) GetType() RegionSpecifier_RegionSpecifierType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return RegionSpecifier_REGION_NAME
}

func (x *RegionSpecifier) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// *
// A range of time. Both from and to are Java time
// stamp in milliseconds. If you don't specify a time
// range, it means all time.  By default, if not
// specified, from = 0, and to = Long.MAX_VALUE
type TimeRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *uint64                `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	To            *uint64                `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	mi := &file_HBase_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{6}
}

func (x *TimeRange) GetFrom() uint64 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *TimeRange) GetTo() uint64 {
	if x != nil && x.To != nil {
		return *x.To
	}
	return 0
}

// ColumnFamily Specific TimeRange
type ColumnFamilyTimeRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ColumnFamily  []byte                 `protobuf:"bytes,1,req,name=column_family,json=columnFamily" json:"column_family,omitempty"`
	TimeRange     *TimeRange             `protobuf:"bytes,2,req,name=time_range,json=timeRange" json:"time_range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnFamilyTimeRange) Reset() {
	*x = ColumnFamilyTimeRange{}
	mi := &file_HBase_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnFamilyTimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnFamilyTimeRange) ProtoMessage() {}

func (x *ColumnFamilyTimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnFamilyTimeRange.ProtoReflect.Descriptor instead.
func (*ColumnFamilyTimeRange) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{7}
}

func (x *ColumnFamilyTimeRange) GetColumnFamily() []byte {
	if x != nil {
		return x.ColumnFamily
	}
	return nil
}

func (x *ColumnFamilyTimeRange) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

// *
// Protocol buffer version of ServerName
type ServerName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostName      *string                `protobuf:"bytes,1,req,name=host_name,json=hostName" json:"host_name,omitempty"`
	Port          *uint32                `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	StartCode     *uint64                `protobuf:"varint,3,opt,name=start_code,json=startCode" json:"start_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerName) Reset() {
	*x = ServerName{}
	mi := &file_HBase_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerName) ProtoMessage() {}

func (x *ServerName) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerName.ProtoReflect.Descriptor instead.
func (*ServerName) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{8}
}

func (x *ServerName) GetHostName() string {
	if x != nil && x.HostName != nil {
		return *x.HostName
	}
	return ""
}

func (x *ServerName) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *ServerName) GetStartCode() uint64 {
	if x != nil && x.StartCode != nil {
		return *x.StartCode
	}
	return 0
}

type Coprocessor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coprocessor) Reset() {
	*x = Coprocessor{}
	mi := &file_HBase_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coprocessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coprocessor) ProtoMessage() {}

func (x *Coprocessor) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coprocessor.ProtoReflect.Descriptor instead.
func (*Coprocessor) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{9}
}

func (x *Coprocessor) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type NameStringPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value         *string                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameStringPair) Reset() {
	*x = NameStringPair{}
	mi := &file_HBase_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameStringPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameStringPair) ProtoMessage() {}

func (x *NameStringPair) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameStringPair.ProtoReflect.Descriptor instead.
func (*NameStringPair) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{10}
}

func (x *NameStringPair) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NameStringPair) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type NameBytesPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameBytesPair) Reset() {
	*x = NameBytesPair{}
	mi := &file_HBase_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameBytesPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameBytesPair) ProtoMessage() {}

func (x *NameBytesPair) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameBytesPair.ProtoReflect.Descriptor instead.
func (*NameBytesPair) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{11}
}

func (x *NameBytesPair) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NameBytesPair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type BytesBytesPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	First         []byte                 `protobuf:"bytes,1,req,name=first" json:"first,omitempty"`
	Second        []byte                 `protobuf:"bytes,2,req,name=second" json:"second,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BytesBytesPair) Reset() {
	*x = BytesBytesPair{}
	mi := &file_HBase_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BytesBytesPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesBytesPair) ProtoMessage() {}

func (x *BytesBytesPair) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesBytesPair.ProtoReflect.Descriptor instead.
func (*BytesBytesPair) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{12}
}

func (x *BytesBytesPair) GetFirst() []byte {
	if x != nil {
		return x.First
	}
	return nil
}

func (x *BytesBytesPair) GetSecond() []byte {
	if x != nil {
		return x.Second
	}
	return nil
}

type NameInt64Pair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value         *int64                 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameInt64Pair) Reset() {
	*x = NameInt64Pair{}
	mi := &file_HBase_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameInt64Pair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameInt64Pair) ProtoMessage() {}

func (x *NameInt64Pair) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameInt64Pair.ProtoReflect.Descriptor instead.
func (*NameInt64Pair) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{13}
}

func (x *NameInt64Pair) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NameInt64Pair) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// *
// Description of the snapshot to take
type SnapshotDescription struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Name          *string                   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Table         *string                   `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"` // not needed for delete, but checked for in taking snapshot
	CreationTime  *int64                    `protobuf:"varint,3,opt,name=creation_time,json=creationTime,def=0" json:"creation_time,omitempty"`
	Type          *SnapshotDescription_Type `protobuf:"varint,4,opt,name=type,enum=pb.SnapshotDescription_Type,def=1" json:"type,omitempty"`
	Version       *int32                    `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
	Owner         *string                   `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for SnapshotDescription fields.
const (
	Default_SnapshotDescription_CreationTime = int64(0)
	Default_SnapshotDescription_Type         = SnapshotDescription_FLUSH
)

func (x *SnapshotDescription) Reset() {
	*x = SnapshotDescription{}
	mi := &file_HBase_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDescription) ProtoMessage() {}

func (x *SnapshotDescription) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDescription.ProtoReflect.Descriptor instead.
func (*SnapshotDescription) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{14}
}

func (x *SnapshotDescription) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SnapshotDescription) GetTable() string {
	if x != nil && x.Table != nil {
		return *x.Table
	}
	return ""
}

func (x *SnapshotDescription) GetCreationTime() int64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return Default_SnapshotDescription_CreationTime
}

func (x *SnapshotDescription) GetType() SnapshotDescription_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_SnapshotDescription_Type
}

func (x *SnapshotDescription) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *SnapshotDescription) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

// *
// Description of the distributed procedure to take
type ProcedureDescription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     *string                `protobuf:"bytes,1,req,name=signature" json:"signature,omitempty"` // the unique signature of the procedure
	Instance      *string                `protobuf:"bytes,2,opt,name=instance" json:"instance,omitempty"`   // the procedure instance name
	CreationTime  *int64                 `protobuf:"varint,3,opt,name=creation_time,json=creationTime,def=0" json:"creation_time,omitempty"`
	Configuration []*NameStringPair      `protobuf:"bytes,4,rep,name=configuration" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for ProcedureDescription fields.
const (
	Default_ProcedureDescription_CreationTime = int64(0)
)

func (x *ProcedureDescription) Reset() {
	*x = ProcedureDescription{}
	mi := &file_HBase_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcedureDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureDescription) ProtoMessage() {}

func (x *ProcedureDescription) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureDescription.ProtoReflect.Descriptor instead.
func (*ProcedureDescription) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{15}
}

func (x *ProcedureDescription) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *ProcedureDescription) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *ProcedureDescription) GetCreationTime() int64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return Default_ProcedureDescription_CreationTime
}

func (x *ProcedureDescription) GetConfiguration() []*NameStringPair {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type EmptyMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyMsg) Reset() {
	*x = EmptyMsg{}
	mi := &file_HBase_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMsg) ProtoMessage() {}

func (x *EmptyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMsg.ProtoReflect.Descriptor instead.
func (*EmptyMsg) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{16}
}

type LongMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LongMsg       *int64                 `protobuf:"varint,1,req,name=long_msg,json=longMsg" json:"long_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LongMsg) Reset() {
	*x = LongMsg{}
	mi := &file_HBase_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LongMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongMsg) ProtoMessage() {}

func (x *LongMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongMsg.ProtoReflect.Descriptor instead.
func (*LongMsg) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{17}
}

func (x *LongMsg) GetLongMsg() int64 {
	if x != nil && x.LongMsg != nil {
		return *x.LongMsg
	}
	return 0
}

type DoubleMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoubleMsg     *float64               `protobuf:"fixed64,1,req,name=double_msg,json=doubleMsg" json:"double_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoubleMsg) Reset() {
	*x = DoubleMsg{}
	mi := &file_HBase_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoubleMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleMsg) ProtoMessage() {}

func (x *DoubleMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleMsg.ProtoReflect.Descriptor instead.
func (*DoubleMsg) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{18}
}

func (x *DoubleMsg) GetDoubleMsg() float64 {
	if x != nil && x.DoubleMsg != nil {
		return *x.DoubleMsg
	}
	return 0
}

type BigDecimalMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BigdecimalMsg []byte                 `protobuf:"bytes,1,req,name=bigdecimal_msg,json=bigdecimalMsg" json:"bigdecimal_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigDecimalMsg) Reset() {
	*x = BigDecimalMsg{}
	mi := &file_HBase_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigDecimalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigDecimalMsg) ProtoMessage() {}

func (x *BigDecimalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigDecimalMsg.ProtoReflect.Descriptor instead.
func (*BigDecimalMsg) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{19}
}

func (x *BigDecimalMsg) GetBigdecimalMsg() []byte {
	if x != nil {
		return x.BigdecimalMsg
	}
	return nil
}

type UUID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeastSigBits  *uint64                `protobuf:"varint,1,req,name=least_sig_bits,json=leastSigBits" json:"least_sig_bits,omitempty"`
	MostSigBits   *uint64                `protobuf:"varint,2,req,name=most_sig_bits,json=mostSigBits" json:"most_sig_bits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UUID) Reset() {
	*x = UUID{}
	mi := &file_HBase_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{20}
}

func (x *UUID) GetLeastSigBits() uint64 {
	if x != nil && x.LeastSigBits != nil {
		return *x.LeastSigBits
	}
	return 0
}

func (x *UUID) GetMostSigBits() uint64 {
	if x != nil && x.MostSigBits != nil {
		return *x.MostSigBits
	}
	return 0
}

type NamespaceDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          []byte                 `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Configuration []*NameStringPair      `protobuf:"bytes,2,rep,name=configuration" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceDescriptor) Reset() {
	*x = NamespaceDescriptor{}
	mi := &file_HBase_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceDescriptor) ProtoMessage() {}

func (x *NamespaceDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceDescriptor.ProtoReflect.Descriptor instead.
func (*NamespaceDescriptor) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{21}
}

func (x *NamespaceDescriptor) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *NamespaceDescriptor) GetConfiguration() []*NameStringPair {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// Rpc client version info proto. Included in ConnectionHeader on connection setup
type VersionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *string                `protobuf:"bytes,1,req,name=version" json:"version,omitempty"`
	Url           *string                `protobuf:"bytes,2,req,name=url" json:"url,omitempty"`
	Revision      *string                `protobuf:"bytes,3,req,name=revision" json:"revision,omitempty"`
	User          *string                `protobuf:"bytes,4,req,name=user" json:"user,omitempty"`
	Date          *string                `protobuf:"bytes,5,req,name=date" json:"date,omitempty"`
	SrcChecksum   *string                `protobuf:"bytes,6,req,name=src_checksum,json=srcChecksum" json:"src_checksum,omitempty"`
	VersionMajor  *uint32                `protobuf:"varint,7,opt,name=version_major,json=versionMajor" json:"version_major,omitempty"`
	VersionMinor  *uint32                `protobuf:"varint,8,opt,name=version_minor,json=versionMinor" json:"version_minor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	mi := &file_HBase_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{22}
}

func (x *VersionInfo) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *VersionInfo) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *VersionInfo) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

func (x *VersionInfo) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *VersionInfo) GetDate() string {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return ""
}

func (x *VersionInfo) GetSrcChecksum() string {
	if x != nil && x.SrcChecksum != nil {
		return *x.SrcChecksum
	}
	return ""
}

func (x *VersionInfo) GetVersionMajor() uint32 {
	if x != nil && x.VersionMajor != nil {
		return *x.VersionMajor
	}
	return 0
}

func (x *VersionInfo) GetVersionMinor() uint32 {
	if x != nil && x.VersionMinor != nil {
		return *x.VersionMinor
	}
	return 0
}

// *
// Description of the region server info
type RegionServerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InfoPort      *int32                 `protobuf:"varint,1,opt,name=infoPort" json:"infoPort,omitempty"`
	VersionInfo   *VersionInfo           `protobuf:"bytes,2,opt,name=version_info,json=versionInfo" json:"version_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegionServerInfo) Reset() {
	*x = RegionServerInfo{}
	mi := &file_HBase_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionServerInfo) ProtoMessage() {}

func (x *RegionServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_HBase_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionServerInfo.ProtoReflect.Descriptor instead.
func (*RegionServerInfo) Descriptor() ([]byte, []int) {
	return file_HBase_proto_rawDescGZIP(), []int{23}
}

func (x *RegionServerInfo) GetInfoPort() int32 {
	if x != nil && x.InfoPort != nil {
		return *x.InfoPort
	}
	return 0
}

func (x *RegionServerInfo) GetVersionInfo() *VersionInfo {
	if x != nil {
		return x.VersionInfo
	}
	return nil
}

var File_HBase_proto protoreflect.FileDescriptor

const file_HBase_proto_rawDesc = "" +
	"\n" +
	"\vHBase.proto\x12\x02pb\"G\n" +
	"\tTableName\x12\x1c\n" +
	"\tnamespace\x18\x01 \x02(\fR\tnamespace\x12\x1c\n" +
	"\tqualifier\x18\x02 \x02(\fR\tqualifier\"\xea\x01\n" +
	"\vTableSchema\x12,\n" +
	"\n" +
	"table_name\x18\x01 \x01(\v2\r.pb.TableNameR\ttableName\x122\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2\x12.pb.BytesBytesPairR\n" +
	"attributes\x12?\n" +
	"\x0fcolumn_families\x18\x03 \x03(\v2\x16.pb.ColumnFamilySchemaR\x0ecolumnFamilies\x128\n" +
	"\rconfiguration\x18\x04 \x03(\v2\x12.pb.NameStringPairR\rconfiguration\"\x96\x01\n" +
	"\x12ColumnFamilySchema\x12\x12\n" +
	"\x04name\x18\x01 \x02(\fR\x04name\x122\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2\x12.pb.BytesBytesPairR\n" +
	"attributes\x128\n" +
	"\rconfiguration\x18\x03 \x03(\v2\x12.pb.NameStringPairR\rconfiguration\"\xdf\x01\n" +
	"\n" +
	"RegionInfo\x12\x1b\n" +
	"\tregion_id\x18\x01 \x02(\x04R\bregionId\x12,\n" +
	"\n" +
	"table_name\x18\x02 \x02(\v2\r.pb.TableNameR\ttableName\x12\x1b\n" +
	"\tstart_key\x18\x03 \x01(\fR\bstartKey\x12\x17\n" +
	"\aend_key\x18\x04 \x01(\fR\x06endKey\x12\x18\n" +
	"\aoffline\x18\x05 \x01(\bR\aoffline\x12\x14\n" +
	"\x05split\x18\x06 \x01(\bR\x05split\x12 \n" +
	"\n" +
	"replica_id\x18\a \x01(\x05:\x010R\treplicaId\"A\n" +
	"\fFavoredNodes\x121\n" +
	"\ffavored_node\x18\x01 \x03(\v2\x0e.pb.ServerNameR\vfavoredNode\"\xa5\x01\n" +
	"\x0fRegionSpecifier\x12;\n" +
	"\x04type\x18\x01 \x02(\x0e2'.pb.RegionSpecifier.RegionSpecifierTypeR\x04type\x12\x14\n" +
	"\x05value\x18\x02 \x02(\fR\x05value\"?\n" +
	"\x13RegionSpecifierType\x12\x0f\n" +
	"\vREGION_NAME\x10\x01\x12\x17\n" +
	"\x13ENCODED_REGION_NAME\x10\x02\"/\n" +
	"\tTimeRange\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x04R\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x04R\x02to\"j\n" +
	"\x15ColumnFamilyTimeRange\x12#\n" +
	"\rcolumn_family\x18\x01 \x02(\fR\fcolumnFamily\x12,\n" +
	"\n" +
	"time_range\x18\x02 \x02(\v2\r.pb.TimeRangeR\ttimeRange\"\\\n" +
	"\n" +
	"ServerName\x12\x1b\n" +
	"\thost_name\x18\x01 \x02(\tR\bhostName\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x1d\n" +
	"\n" +
	"start_code\x18\x03 \x01(\x04R\tstartCode\"!\n" +
	"\vCoprocessor\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\":\n" +
	"\x0eNameStringPair\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x02(\tR\x05value\"9\n" +
	"\rNameBytesPair\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\">\n" +
	"\x0eBytesBytesPair\x12\x14\n" +
	"\x05first\x18\x01 \x02(\fR\x05first\x12\x16\n" +
	"\x06second\x18\x02 \x02(\fR\x06second\"9\n" +
	"\rNameInt64Pair\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value\"\x80\x02\n" +
	"\x13SnapshotDescription\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12\x14\n" +
	"\x05table\x18\x02 \x01(\tR\x05table\x12&\n" +
	"\rcreation_time\x18\x03 \x01(\x03:\x010R\fcreationTime\x127\n" +
	"\x04type\x18\x04 \x01(\x0e2\x1c.pb.SnapshotDescription.Type:\x05FLUSHR\x04type\x12\x18\n" +
	"\aversion\x18\x05 \x01(\x05R\aversion\x12\x14\n" +
	"\x05owner\x18\x06 \x01(\tR\x05owner\".\n" +
	"\x04Type\x12\f\n" +
	"\bDISABLED\x10\x00\x12\t\n" +
	"\x05FLUSH\x10\x01\x12\r\n" +
	"\tSKIPFLUSH\x10\x02\"\xb2\x01\n" +
	"\x14ProcedureDescription\x12\x1c\n" +
	"\tsignature\x18\x01 \x02(\tR\tsignature\x12\x1a\n" +
	"\binstance\x18\x02 \x01(\tR\binstance\x12&\n" +
	"\rcreation_time\x18\x03 \x01(\x03:\x010R\fcreationTime\x128\n" +
	"\rconfiguration\x18\x04 \x03(\v2\x12.pb.NameStringPairR\rconfiguration\"\n" +
	"\n" +
	"\bEmptyMsg\"$\n" +
	"\aLongMsg\x12\x19\n" +
	"\blong_msg\x18\x01 \x02(\x03R\alongMsg\"*\n" +
	"\tDoubleMsg\x12\x1d\n" +
	"\n" +
	"double_msg\x18\x01 \x02(\x01R\tdoubleMsg\"6\n" +
	"\rBigDecimalMsg\x12%\n" +
	"\x0ebigdecimal_msg\x18\x01 \x02(\fR\rbigdecimalMsg\"P\n" +
	"\x04UUID\x12$\n" +
	"\x0eleast_sig_bits\x18\x01 \x02(\x04R\fleastSigBits\x12\"\n" +
	"\rmost_sig_bits\x18\x02 \x02(\x04R\vmostSigBits\"c\n" +
	"\x13NamespaceDescriptor\x12\x12\n" +
	"\x04name\x18\x01 \x02(\fR\x04name\x128\n" +
	"\rconfiguration\x18\x02 \x03(\v2\x12.pb.NameStringPairR\rconfiguration\"\xea\x01\n" +
	"\vVersionInfo\x12\x18\n" +
	"\aversion\x18\x01 \x02(\tR\aversion\x12\x10\n" +
	"\x03url\x18\x02 \x02(\tR\x03url\x12\x1a\n" +
	"\brevision\x18\x03 \x02(\tR\brevision\x12\x12\n" +
	"\x04user\x18\x04 \x02(\tR\x04user\x12\x12\n" +
	"\x04date\x18\x05 \x02(\tR\x04date\x12!\n" +
	"\fsrc_checksum\x18\x06 \x02(\tR\vsrcChecksum\x12#\n" +
	"\rversion_major\x18\a \x01(\rR\fversionMajor\x12#\n" +
	"\rversion_minor\x18\b \x01(\rR\fversionMinor\"b\n" +
	"\x10RegionServerInfo\x12\x1a\n" +
	"\binfoPort\x18\x01 \x01(\x05R\binfoPort\x122\n" +
	"\fversion_info\x18\x02 \x01(\v2\x0f.pb.VersionInfoR\vversionInfo*r\n" +
	"\vCompareType\x12\b\n" +
	"\x04LESS\x10\x00\x12\x11\n" +
	"\rLESS_OR_EQUAL\x10\x01\x12\t\n" +
	"\x05EQUAL\x10\x02\x12\r\n" +
	"\tNOT_EQUAL\x10\x03\x12\x14\n" +
	"\x10GREATER_OR_EQUAL\x10\x04\x12\v\n" +
	"\aGREATER\x10\x05\x12\t\n" +
	"\x05NO_OP\x10\x06*n\n" +
	"\bTimeUnit\x12\x0f\n" +
	"\vNANOSECONDS\x10\x01\x12\x10\n" +
	"\fMICROSECONDS\x10\x02\x12\x10\n" +
	"\fMILLISECONDS\x10\x03\x12\v\n" +
	"\aSECONDS\x10\x04\x12\v\n" +
	"\aMINUTES\x10\x05\x12\t\n" +
	"\x05HOURS\x10\x06\x12\b\n" +
	"\x04DAYS\x10\aBE\n" +
	"*org.apache.hadoop.hbase.protobuf.generatedB\vHBaseProtosH\x01Z\x05../pb\xa0\x01\x01"

var (
	file_HBase_proto_rawDescOnce sync.Once
	file_HBase_proto_rawDescData []byte
)

func file_HBase_proto_rawDescGZIP() []byte {
	file_HBase_proto_rawDescOnce.Do(func() {
		file_HBase_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_HBase_proto_rawDesc), len(file_HBase_proto_rawDesc)))
	})
	return file_HBase_proto_rawDescData
}

var file_HBase_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_HBase_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_HBase_proto_goTypes = []any{
	(CompareType)(0),                         // 0: pb.CompareType
	(TimeUnit)(0),                            // 1: pb.TimeUnit
	(RegionSpecifier_RegionSpecifierType)(0), // 2: pb.RegionSpecifier.RegionSpecifierType
	(SnapshotDescription_Type)(0),            // 3: pb.SnapshotDescription.Type
	(*TableName)(nil),                        // 4: pb.TableName
	(*TableSchema)(nil),                      // 5: pb.TableSchema
	(*ColumnFamilySchema)(nil),               // 6: pb.ColumnFamilySchema
	(*RegionInfo)(nil),                       // 7: pb.RegionInfo
	(*FavoredNodes)(nil),                     // 8: pb.FavoredNodes
	(*RegionSpecifier)(nil),                  // 9: pb.RegionSpecifier
	(*TimeRange)(nil),                        // 10: pb.TimeRange
	(*ColumnFamilyTimeRange)(nil),            // 11: pb.ColumnFamilyTimeRange
	(*ServerName)(nil),                       // 12: pb.ServerName
	(*Coprocessor)(nil),                      // 13: pb.Coprocessor
	(*NameStringPair)(nil),                   // 14: pb.NameStringPair
	(*NameBytesPair)(nil),                    // 15: pb.NameBytesPair
	(*BytesBytesPair)(nil),                   // 16: pb.BytesBytesPair
	(*NameInt64Pair)(nil),                    // 17: pb.NameInt64Pair
	(*SnapshotDescription)(nil),              // 18: pb.SnapshotDescription
	(*ProcedureDescription)(nil),             // 19: pb.ProcedureDescription
	(*EmptyMsg)(nil),                         // 20: pb.EmptyMsg
	(*LongMsg)(nil),                          // 21: pb.LongMsg
	(*DoubleMsg)(nil),                        // 22: pb.DoubleMsg
	(*BigDecimalMsg)(nil),                    // 23: pb.BigDecimalMsg
	(*UUID)(nil),                             // 24: pb.UUID
	(*NamespaceDescriptor)(nil),              // 25: pb.NamespaceDescriptor
	(*VersionInfo)(nil),                      // 26: pb.VersionInfo
	(*RegionServerInfo)(nil),                 // 27: pb.RegionServerInfo
}
var file_HBase_proto_depIdxs = []int32{
	4,  // 0: pb.TableSchema.table_name:type_name -> pb.TableName
	16, // 1: pb.TableSchema.attributes:type_name -> pb.BytesBytesPair
	6,  // 2: pb.TableSchema.column_families:type_name -> pb.ColumnFamilySchema
	14, // 3: pb.TableSchema.configuration:type_name -> pb.NameStringPair
	16, // 4: pb.ColumnFamilySchema.attributes:type_name -> pb.BytesBytesPair
	14, // 5: pb.ColumnFamilySchema.configuration:type_name -> pb.NameStringPair
	4,  // 6: pb.RegionInfo.table_name:type_name -> pb.TableName
	12, // 7: pb.FavoredNodes.favored_node:type_name -> pb.ServerName
	2,  // 8: pb.RegionSpecifier.type:type_name -> pb.RegionSpecifier.RegionSpecifierType
	10, // 9: pb.ColumnFamilyTimeRange.time_range:type_name -> pb.TimeRange
	3,  // 10: pb.SnapshotDescription.type:type_name -> pb.SnapshotDescription.Type
	14, // 11: pb.ProcedureDescription.configuration:type_name -> pb.NameStringPair
	14, // 12: pb.NamespaceDescriptor.configuration:type_name -> pb.NameStringPair
	26, // 13: pb.RegionServerInfo.version_info:type_name -> pb.VersionInfo
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_HBase_proto_init() }
func file_HBase_proto_init() {
	if File_HBase_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_HBase_proto_rawDesc), len(file_HBase_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HBase_proto_goTypes,
		DependencyIndexes: file_HBase_proto_depIdxs,
		EnumInfos:         file_HBase_proto_enumTypes,
		MessageInfos:      file_HBase_proto_msgTypes,
	}.Build()
	File_HBase_proto = out.File
	file_HBase_proto_goTypes = nil
	file_HBase_proto_depIdxs = nil
}
